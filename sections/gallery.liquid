{%- style -%}
  .cfr-masonry_container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
  }

  @media screen and (max-width: 880px) {
    .cfr-masonry_container {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 500px) {
    .cfr-masonry_container {
      grid-template-columns: 1fr;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color.color_scheme }} gradient isolate cfr-masonry">
  <div class="page-width section-{{ section.id }}-padding cfr-masonry_container">
    <div class="cfr-masonry_column">
      {%- for block in section.blocks -%}
        <figure>
          {{ block.settings.image | image_url: width: 500 | image_tag: widths: '350, 500' }}
          {%- if block.settings.image_caption != blank -%}
            <figcaption>{{ block.settings.image_caption }}</figcaption>
          {%- endif -%}
        </figure>
      {%- endfor -%}
    </div>
    <div class="cfr-masonry_column"></div>
    <div class="cfr-masonry_column"></div>
  </div>
  <script>
    const container = document
      .getElementById('shopify-section-{{ section.id }}')
      .querySelector('.cfr-masonry_container');
    const columns = container.querySelectorAll('.cfr-masonry_column');
    const figures = container.querySelectorAll('figure');

    const onresize = () => {
      const computedSize = window.getComputedStyle(container);
      const columns = computedSize.getPropertyValue('grid-template-columns').split(' ').length;
      for (let i = 0; i < figures.length; i++) {
        const figure = figures[i];
        const index = i % 3;
        columns[index].append(figure);
      }
    };

    window.addEventListener('resize', onresize);
    onresize();
  </script>
</div>

{%- schema -%}
{
  "name": "Image Gallery",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "section_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    }
  ],
  "blocks": [
    {
      "type": "gallery_image",
      "name": "image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "image selector"
        },
        {
          "type": "text",
          "id": "image_caption",
          "label": "image caption",
          "default": "Add a tagline"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image Gallery",
      "blocks": [{ "type": "gallery_image" }]
    }
  ]
}
{%- endschema -%}
